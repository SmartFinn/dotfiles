# ===================================================================
# This file contains the custom commands for ranger.
#
# The purpose of this file is mainly to define keybindings and settings.
# For running more complex python code, please create a plugin in "plugins/" or
# a command in "commands.py".
#
# Each line is a command that will be run before the user interface
# is initialized.  As a result, you can not use commands which rely
# on the UI such as :delete or :mark.
# ===================================================================

# ===================================================================
# == Options
# ===================================================================

# Set the preview image method. Supported methods:
#
# * w3m (default):
#   Preview images in full color with the external command "w3mimgpreview"?
#   This requires the console web browser "w3m" and a supported terminal.
#   It has been successfully tested with "xterm" and "urxvt" without tmux.
#
# * iterm2:
#   Preview images in full color using iTerm2 image previews
#   (http://iterm2.com/images.html). This requires using iTerm2 compiled
#   with image preview support.
#
#   This feature relies on the dimensions of the terminal's font.  By default, a
#   width of 8 and height of 11 are used.  To use other values, set the options
#   iterm2_font_width and iterm2_font_height to the desired values.
#
# * terminology:
#   Previews images in full color in the terminology terminal emulator.
#   Supports a wide variety of formats, even vector graphics like svg.
#
# * urxvt:
#   Preview images in full color using urxvt image backgrounds. This
#   requires using urxvt compiled with pixbuf support.
#
# * urxvt-full:
#   The same as urxvt but utilizing not only the preview pane but the
#   whole terminal window.
#
# * kitty:
#   Preview images in full color using kitty image protocol.
#   Requires python PIL or pillow library.
#   If ranger does not share the local filesystem with kitty
#   the transfer method is changed to encode the whole image;
#   while slower, this allows remote previews,
#   for example during an ssh session.
#   Tmux is unsupported.
#
# * ueberzug:
#   Preview images in full color with the external command "ueberzug".
#   Images are shown by using a child window.
#   Only for users who run X11 in GNU/Linux.
set preview_images_method kitty

# Use a unicode "..." character to mark cut-off filenames?
set unicode_ellipsis true

# Which colorscheme to use?  These colorschemes are available by default:
# default, jungle, snow, solarized
set colorscheme ls_colors

# Preview files on the rightmost column?
# And collapse (shrink) the last column if there is nothing to preview?
set collapse_preview false

# Enable the mouse support?
set mouse_enabled false

# Set the tmux/screen window-name to "ranger"?
set update_tmux_title true

# Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
set tilde_in_titlebar true

# Use fuzzy tab completion with the "cd" command. For example,
# ":cd /u/lo/b<tab>" expands to ":cd /usr/local/bin".
set cd_tab_fuzzy true

# ===================================================================
# == Local Options
# ===================================================================
# You can set local options that only affect a single directory.
# setlocal path=~/Downloads   sort ctime

setlocal path=~/Git vcs_aware true
setlocal path=~/Development vcs_aware true

# ===================================================================
# == Command Aliases in the Console
# ===================================================================

# do not automatically open on unambiguous match
alias find   scout -est

# enable interactive search by default
alias search scout -rst

# deny letter skipping
alias travel scout -aefkst

# ===================================================================
# == Define keys for the browser
# ===================================================================

map e         edit
map <DELETE>  console move_to_trash
map cw        eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
map ce        shell sensible-editor %s
map zF        toggle_flat
map g<Space>  icd
map gf        eval fm.cd('/run/user/' + str(os.getuid()) + '/gvfs')
map D         shell -p stat %s
map zj        console z%space
map zz        zi

map Xx        console extract %%s
map XX        extracthere
map Xc        console compress %%f.tar.gz

# Ranger plugin that adds file glyphs/icon support to Ranger
# https://github.com/alexanderjeurissen/ranger_devicons
default_linemode devicons
