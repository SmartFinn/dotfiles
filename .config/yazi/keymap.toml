# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

# overwrite the default keybinding to make them ranger-like
keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "Q",     run = "quit",               desc = "Quit the process" },
	{ on = "<C-q>", run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
	{ on = "q",     run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-w>", run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Hopping
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1", desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous file" },
	{ on = "<Down>", run = "arrow next", desc = "Next file" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
	{ on = "G",          run = "arrow bot", desc = "Go to bottom" },

	# Navigation
	{ on = "h", run = "leave", desc = "Back to the parent directory" },
	{ on = "l", run = "enter", desc = "Enter the child directory" },

	{ on = "<Left>",  run = "leave", desc = "Back to the parent directory" },
	{ on = "<Right>", run = "enter", desc = "Enter the child directory" },

	{ on = "H", run = "back",    desc = "Back to previous directory" },
	{ on = "L", run = "forward", desc = "Forward to next directory" },

	# Toggle
	{ on = "<Space>", run = [ "toggle", "arrow next" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on",    desc = "Select all files" },
	{ on = "<C-v>",   run = "toggle_all",               desc = "Invert selection of all files" },
	{ on = [ "u", "v" ], run = "toggle_all --state=off", desc = "Deselect all files" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "i", run = "spot", desc = "Spot hovered file" },

	# Operation
	{ on = "r",         run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "<Enter>",   run = "open",                        desc = "Open selected files" },
	{ on = "<S-Enter>", run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = [ "y", "y" ], run = "yank",                       desc = "Yank selected files (copy)" },
	{ on = [ "d", "d" ], run = "yank --cut",                 desc = "Yank selected files (cut)" },
	{ on = [ "p", "p" ], run = "paste",                      desc = "Paste yanked files" },
	{ on = [ "p", "o" ], run = "paste --force",              desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = [ "p", "l" ], run = "link",                       desc = "Symlink the absolute path of yanked files" },
	{ on = [ "p", "L" ], run = "link --relative",            desc = "Symlink the relative path of yanked files" },
	{ on = [ "p", "h" ], run = "hardlink",                   desc = "Hardlink yanked files" },
	{ on = [ "u", "y" ], run = "unyank",                     desc = "Cancel the yank status" },
	{ on = [ "d", "D" ], run = "remove",                     desc = "Trash selected files" },
	{ on = "<Delete>",   run = "remove",                     desc = "Trash selected files" },
	{ on = [ "d", "r" ], run = "remove --permanently",       desc = "Permanently delete selected files" },
	{ on = "o",         run = "create",                      desc = "Create a file (ends with / for directories)" },
	{ on = "a",         run = "rename --cursor=before_ext",  desc = "Rename selected file(s)" },
	{ on = "A",         run = "rename",                      desc = "Rename selected file(s)" },
	{ on = ";",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
	{ on = ".",         run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = "s",         run = "search --via=fd",             desc = "Search files by name via fd" },
	{ on = "R",         run = "search --via=rg",             desc = "Search files by content via ripgrep" },
	{ on = "Z",         run = "plugin fzf",                  desc = "Jump to a file/directory via fzf" },
	{ on = "z",         run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	{ on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Copy
	{ on = [ "y", "p" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "y", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "y", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Previous found" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go home" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "Go ~/.config" },
	{ on = [ "g", "y" ],       run = "cd ~/.config/yazi", desc = "Go Yazi configuration" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Go ~/Downloads" },
	{ on = [ "g", "/" ],       run = "cd /",             desc = "Go root" },
	{ on = [ "g", "e" ],       run = "cd /etc",          desc = "Go /etc" },
	{ on = [ "g", "u" ],       run = "cd /usr",          desc = "Go /usr" },
	{ on = [ "g", "v" ],       run = "cd /var",          desc = "Go /var" },
	{ on = [ "g", "m" ],       run = "cd /media",        desc = "Go /media" },
	{ on = [ "g", "M" ],       run = "cd /mnt",          desc = "Go /mnt" },
	{ on = [ "g", "i" ],       run = "cd /run/media/$USER", desc = "Go /run/media/$USER" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Jump interactively" },
	{ on = [ "g", "f" ],       run = "follow",           desc = "Follow hovered symlink" },

	# Tabs
	{ on = "<C-n>", run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = "1", run = "tab_switch 0", desc = "Switch to first tab" },
	{ on = "2", run = "tab_switch 1", desc = "Switch to second tab" },
	{ on = "3", run = "tab_switch 2", desc = "Switch to third tab" },
	{ on = "4", run = "tab_switch 3", desc = "Switch to fourth tab" },
	{ on = "5", run = "tab_switch 4", desc = "Switch to fifth tab" },
	{ on = "6", run = "tab_switch 5", desc = "Switch to sixth tab" },
	{ on = "7", run = "tab_switch 6", desc = "Switch to seventh tab" },
	{ on = "8", run = "tab_switch 7", desc = "Switch to eighth tab" },
	{ on = "9", run = "tab_switch 8", desc = "Switch to ninth tab" },

	{ on = "<BackTab>", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
	{ on = "<Tab>",     run = "tab_switch 1 --relative",  desc = "Switch to next tab" },

	{ on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[[manager.prepend_keymap]]
on   = "<C-\\>"
run  = "plugin toggle-pane min-preview"
desc = "Hide or show preview"

[[manager.prepend_keymap]]
on   = "<F3>"
run  = "plugin toggle-pane max-preview"
desc = "Maximize or restore preview"

[[manager.prepend_keymap]]
on   = "S"
run  = 'shell "$SHELL" --block --confirm'
desc = "Open shell here"

[[manager.prepend_keymap]]
on   = "l"
run  = [ "plugin smart-enter", "escape --visual --select" ]
desc = "Enter the child directory, or open file."

[[manager.prepend_keymap]]
on   = "<Enter>"
run  = "plugin smart-enter"
desc = "Enter the child directory, or open the file"

[[manager.prepend_keymap]]
on  = "<A-m>"
run = "plugin mount"
desc = "Show mount manager"

[[manager.prepend_keymap]]
on   = "F"
run  = "plugin smart-filter"
desc = "Smart filter"

[[manager.prepend_keymap]]
on   = "<A-l>"
run  = "plugin lazygit"
desc = "run lazygit"

[[manager.prepend_keymap]]
on   = "="
run  = "plugin chmod"
desc = "Chmod on selected files"

[[manager.prepend_keymap]]
on   = [ "c", "m" ]
run  = "plugin chmod"
desc = "Chmod on selected files"

[[input.prepend_keymap]]
on   = "<Esc>"
run  = "close"
desc = "Cancel input"

[[spot.prepend_keymap]]
on   = "q"
run  = "close"
desc = "Close the spot"

[[tasks.prepend_keymap]]
on   = "q"
run  = "close"
desc = "Cancel"

[[help.prepend_keymap]]
on   = "q"
run  = "close"
desc = "Close"
